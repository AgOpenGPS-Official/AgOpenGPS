name: Build and release

on:
  # Trigger the workflow on push or pull request,
  # but only for the dev branch
  push:
    branches:
      - develop
      # - feature/*
      # - release/*
      # - master

env:
  # Path to the solution file relative to the root of the project.https://github.com/farmerbriantee/AgOpenGPS/network/members
  SOLUTION_FILE_PATH: ./SourceCode/AgOpenGPS.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Install 7Zip PowerShell Module
      shell: powershell
      run: Install-Module 7Zip4PowerShell -Force
         
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}} -PackagesDirectory .\SourceCode\packages -source "https://api.nuget.org/v3/index.json"

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Directory Listing
      shell: cmd
      run: dir
      
    - name: Build Artifact AgOpenGPS
      shell: powershell
      run: Compress-7Zip "AgOpenGPS_v64" -ArchiveFileName "AgOpenGPS_v64.zip" -Format Zip    

    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.GitVersion_SemVer }}
        release_name: Release ${{ env.GitVersion_SemVer }}
        body: |
          Automated Release by GitHub Action CI
        draft: false
        prerelease: true
               
    - name: Upload Release Asset AgOpenGPS
      id: upload-release-asset-agopengps
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./AgOpenGPS_v64.zip
        asset_name: AgOpenGPS_v64.zip
        asset_content_type: application/zip
